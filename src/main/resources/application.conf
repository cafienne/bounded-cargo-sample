application {
  bind {
    host = 0.0.0.0
    port = 8100
  }

  lmdb-path = "run"
}

bounded {
  eventmaterializers.publish = false
}

akka {
  loglevel = DEBUG
  #loglevel = ${?AKKA_LOGLEVEL}
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  statsd {
    hostname = "localhost"
    #hostname = ${STATSD_HOST}
    port = 8125
    namespace = "bounded.cargo"
    #namespace = ${?STATSD_NAMESPACE}
  }

  actor {
    provider = "akka.actor.LocalActorRefProvider"

    serializers {
      serializer = "io.cafienne.bounded.cargosample.persistence.CargoPersistersSerializer"
    }

    serialization-bindings {
      "stamina.Persistable" = serializer
      // enable below to check if all events have been serialized without java.io.Serializable
      //"java.io.Serializable" = none
    }
  }

  persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      auto-start-journals = ["akka.persistence.journal.leveldb"]
      leveldb {
        dir = "target/journal"
        event-adapters {
          cargoTaggingEventAdapter = "io.cafienne.bounded.cargosample.persistence.CargoTaggingEventAdapter"
        }
        event-adapter-bindings {
          "io.cafienne.bounded.cargosample.domain.CargoDomainProtocol$CargoDomainEvent" = cargoTaggingEventAdapter
        }
      }
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
      local.dir = "target/snapshots"
    }
  }
}